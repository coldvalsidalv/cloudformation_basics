Parameters:
  NameOfService:
    Description: The name of the service this stack is to be used from
    Type: String
  InstanceTypeParameter:
    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro.
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - t2.small
      - t3.micro
      - t3.small
      - m1.small
      - m1.large
  KeyName:
    Description: Name of EC2 login Key
    Type: AWS::EC2::KeyPair::KeyName


Mappings:
  AmiRegionMap:
    us-east-1:
      AMI: "ami-0453ec754f44f9a4a"
    us-west-1:
      AMI: "ami-038bba9a164eb3dc1"
    eu-west-1:
      AMI: "ami-02141377eee7defb9"
    eu-west-2:
      AMI: "ami-0c76bd4bd302b30ec"
    eu-north-1:
      AMI: "ami-02a0945ba27a488b7"
Resources:
  MyInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceTypeParameter
      KeyName: !Ref KeyName
      ImageId: !FindInMap
        - AmiRegionMap
        - !Ref AWS::Region
        - AMI
      Tags: 
        - Key: "Name"
          Value: !Ref NameOfService
      SecurityGroups:
        - !Ref VprofileSG

  VprofileSG: 
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow ssh & http to client host
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 77.252.46.123/32

Outputs:
  PrintSomeInfo:
    Value: !GetAtt
      - MyInstance
      - PublicDnsName